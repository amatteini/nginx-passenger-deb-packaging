#!/bin/bash
#
#   $ ./build_nginx
#
set -e
set -u

EXPECTED_ARGS=1
E_BADARGS=65

if [ $# -lt $EXPECTED_ARGS ]
then
  echo "Usage: `basename $0` {codename}"
  exit ${E_BADARGS};
fi

name=nginx-passenger
#use old debian init.d scripts or ubuntu upstart
dist="debian" #$1
CODENAME=$1
VERSION=1.5.1
DEB_BUILD_ARCH=`dpkg-architecture -qDEB_BUILD_ARCH`
LICENSE="2-clause BSD-like license" #from nginx.org
description="small, powerful, scalable web/proxy server Nginx (\"engine X\") is a high-performance web and reverse proxy server created by Igor Sysoev. It can be used both as a standalone web server and as a proxy to reduce the load on back-end HTTP or mail servers.
This package includes Passenger `passenger-config --version`"
url="http://nginx.net"
arch="${DEB_BUILD_ARCH}"
section="misc"
package_version=""
origdir="$(pwd)"
TAR="nginx-${VERSION}.tar.gz"
SOURCE="http://nginx.org/download/${TAR}"
if [[ "${CODENAME}" == "squeeze" ]]; then
  LIBSSL="libssl0.9.8"
else
  #should work for wheezy
  LIBSSL="libssl1.0.0"
fi
LIBCURL="libcurl4-openssl-dev" #whichever libcurl you prefere
#LIBCURL="libcurl4-gnutls-dev"

#depending on you ruby installation you might need to use some sort of sudo
SUDO="rvmsudo"

CLEAN="false"
if [ $# -gt 1 ]; then
  if [ $2 == "clean" ]; then
        echo "got clear arg"
    CLEAN="true"
  fi
fi

# add e.g. to ~/.bash_profile 'export MAINTAINER="your@email.com"'
# if variable not set, use default value
if [[ -z ${MAINTAINER+xxx} && "${MAINTAINER+xxx}" = "xxx" ]]; then
  #variable is not set at all or it's empty
  MAINTAINER="${USER}@localhost"
fi


#_ MAIN _#
echo "removing ${name}*.deb"
rm -rf ${name}*.deb
mkdir -p tmp && pushd tmp
SRC_DIR="nginx-${VERSION}"
if [ ! -d ${SRC_DIR} ]; then
  wget ${SOURCE}
  tar -xvzf ${TAR}
fi
cd ${SRC_DIR}


if [ ${CLEAN} == "true" ]; then
  echo "cleaning previous build"
  rm -rf build
  mkdir build
fi

#check dependencies
DEPENDENCIES=(autoconf automake wget make ${LIBCURL} zlib1g-dev libpcre3-dev)
i=0
expstatus="Status: install ok installed"
for package in ${DEPENDENCIES[@]}
do
   status=`dpkg -s ${package} | grep Status:`
   if [[ "${status}" != *"${expstatus}"* ]]; then
     echo "missing package: ${package}"
     i=$((i+1))
   fi
done
if [[ i -gt 0 ]]; then
  echo "please install missing dependencies"
  exit 1
fi

#findout passenger path
PASSENGER_GEM_DIR=`passenger-config --root`
passenger_ext_path="${PASSENGER_GEM_DIR}/ext/nginx"

if [[ ! -d ${passenger_ext_path} ]]; then
  echo "the passenger gem does not seem to be correctly installed, check ${PASSENGER_GEM_DIR}"
fi

#nginx options
OPTS="--prefix=/etc/nginx \
      --conf-path=/etc/nginx/nginx.conf \
      --error-log-path=/var/log/nginx/error.log --pid-path=/var/run/nginx.pid \
      --lock-path=/var/lock/nginx.lock \
      --http-log-path=/var/log/nginx/access.log \
      --with-http_dav_module \
      --http-client-body-temp-path=/var/lib/nginx/body \
      --http-proxy-temp-path=/var/lib/nginx/proxy \
      --with-http_stub_status_module \
      --sbin-path=/usr/sbin/nginx \
      --with-http_ssl_module \
      --with-http_gzip_static_module \
      --with-ipv6 \
      --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
      --with-http_realip_module \
      --with-debug \
      --with-sha1=/usr/include/openssl \
      --with-md5=/usr/include/openssl \
      --add-module=${passenger_ext_path}"

#for GeoIp module: --with-http_geoip_module


if [[ -d "deb" ]]; then
  echo "removing old deb directory..."
  rm -rf deb
fi

mkdir deb

echo "nginx options: ${OPTS}"
${SUDO} ./configure ${OPTS}
#if sudo is used, objects are owned by root
${SUDO} chown -R ${USER} .
make
make install DESTDIR=`pwd`/deb


cd deb
echo "entering package root `pwd`"
echo "building deb package ..."

mkdir -p etc/init.d
# preserve executable flag
cp -p ${origdir}/debian/initd etc/init.d/nginx
mkdir etc/default
cp ${origdir}/debian/default etc/default/nginx
mkdir etc/logrotate.d
cp debian/logrotate etc/logrotate.d/nginx
mkdir -p lib/systemd/system
cp debian/nginx.service lib/systemd/system/nginx.service

#_ MAKE DEBIAN _#
fpm -t deb \
    -n ${name} \
    -v "${VERSION}~${CODENAME}${package_version}" \
    --description "${description}" \
    --url="${url}" \
    -a ${arch} \
    --license "${LICENSE}" \
    --category ${section} \
    --vendor "" \
    --replaces "nginx-full" --replaces "nginx-light" --replaces "nginx-naxsi" \
    -d "libc6" -d "libpcre3" -d "zlib1g" -d "${LIBSSL}" \
    --before-remove "${origdir}/debian/nginx-passenger.prerm" \
    --after-remove "${origdir}/debian/nginx-passenger.postrm" \
    --after-install "${origdir}/debian/nginx-passenger.postinst" \
    -m "$MAINTAINER" \
    --prefix=/ \
    -s dir \
    -- .
mv ${name}*.deb ${origdir}
popd

