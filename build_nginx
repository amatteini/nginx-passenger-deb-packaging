#!/bin/bash
#
#   $ ./build_nginx
#
set -e
set -u

EXPECTED_ARGS=1
E_BADARGS=65

if [ $# -lt $EXPECTED_ARGS ]
then
  echo "Usage: `basename $0` {dist_name} [clean]"
  exit ${E_BADARGS};
fi

CURRDIR="$(cd `dirname $0`; pwd)"

name=nginx-passenger
#use old debian init.d scripts or ubuntu upstart
dist=$1
VERSION=1.5.1
description="small, powerful, scalable web/proxy server
 Nginx (\"engine X\") is a high-performance web and reverse proxy server created by Igor Sysoev. It can be used both as a standalone web server and as a
 proxy to reduce the load on back-end HTTP or mail servers."
url="http://nginx.net"
arch="amd64"
section="misc"
package_version=""
origdir="$(pwd)"
TAR="nginx-${VERSION}.tar.gz"
SOURCE="http://nginx.org/download/${TAR}"

CLEAN="false"
if [ $# -gt 1 ]; then
  if [ $2 == "clean" ]; then
        echo "got clear arg"
    CLEAN="true"
  fi
fi


#_ MAIN _#
echo "removing ${name}*.deb"
rm -rf ${name}*.deb
mkdir -p tmp && pushd tmp
SRC_DIR="nginx-${VERSION}"
if [ ! -d ${SRC_DIR} ]; then
  wget ${SOURCE}
  tar -xvzf ${TAR}
fi
cd ${SRC_DIR}


if [ ${CLEAN} == "true" ]; then
  echo "cleaning previous build"
  rm -rf build
  mkdir build
fi

#findout passenger path
passenger_ext_path="`ruby ${CURRDIR}/gem_path.rb passenger`/ext/nginx"

OPTS="--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log \
--pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --http-log-path=/var/log/nginx/access.log \
--with-http_dav_module --http-client-body-temp-path=/var/lib/nginx/body \
--http-proxy-temp-path=/var/lib/nginx/proxy --with-http_stub_status_module \
--sbin-path=/usr/sbin/nginx --with-http_ssl_module --with-http_gzip_static_module \
--with-ipv6 --add-module=${passenger_ext_path}"

./configure ${OPTS}
#make

